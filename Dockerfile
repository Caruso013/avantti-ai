FROM python:3.13-slim

# Define argumentos de build (passados pelo EasyPanel)
ARG SUPABASE_URL
ARG SUPABASE_KEY
ARG ZAPI_BASE_URL
ARG ZAPI_INSTANCE_ID
ARG ZAPI_INSTANCE_TOKEN
ARG ZAPI_CLIENT_TOKEN
ARG ZAPI_INSTANCE
ARG ZAPI_TOKEN
ARG OPENAI_API_KEY
ARG OPENAI_BASE_URL
ARG OPENAI_ASSISTANT_ID
ARG OPENAI_MAX_OUTPUT_TOKENS
ARG PHONE_NUMBER_NOTIFICATION
ARG APP_ENV
ARG APP_PORT
ARG PORT

# Define o diretório de trabalho
WORKDIR /app

# Copia os arquivos de dependências
COPY requirements.txt .

# Instala as dependências
RUN pip install --no-cache-dir -r requirements.txt

# Copia o código da aplicação
COPY . .

# Configura PYTHONPATH para resolver imports
ENV PYTHONPATH="/app:${PYTHONPATH}"

# Expõe a porta 5000
EXPOSE 5000

# Define variáveis de ambiente a partir dos build args
ENV SUPABASE_URL=${SUPABASE_URL}
ENV SUPABASE_KEY=${SUPABASE_KEY}
ENV ZAPI_BASE_URL=${ZAPI_BASE_URL}
ENV ZAPI_INSTANCE_ID=${ZAPI_INSTANCE_ID}
ENV ZAPI_INSTANCE_TOKEN=${ZAPI_INSTANCE_TOKEN}
ENV ZAPI_CLIENT_TOKEN=${ZAPI_CLIENT_TOKEN}
ENV ZAPI_INSTANCE=${ZAPI_INSTANCE}
ENV ZAPI_TOKEN=${ZAPI_TOKEN}
ENV OPENAI_API_KEY=${OPENAI_API_KEY}
ENV OPENAI_BASE_URL=${OPENAI_BASE_URL}
ENV OPENAI_ASSISTANT_ID=${OPENAI_ASSISTANT_ID}
ENV OPENAI_MAX_OUTPUT_TOKENS=${OPENAI_MAX_OUTPUT_TOKENS}
ENV PHONE_NUMBER_NOTIFICATION=${PHONE_NUMBER_NOTIFICATION}
ENV FLASK_APP=main.py
ENV FLASK_RUN_HOST=0.0.0.0
ENV FLASK_RUN_PORT=${APP_PORT:-5000}
ENV PORT=${APP_PORT:-5000}

# Comando para executar a aplicação
CMD ["python", "main.py"]